# Default values for teamcity.
# This is a YAML-formatted file.
# Declare variables.tf to be passed into your templates.

## Service Account
## Ref: https://kubernetes.io/docs/admin/service-accounts-admin/
##
serviceAccount:
  create: true
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the "fullname" template
  name:

## Role Based Access Control
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
rbac:
  create: true
  role:
    ## Rules to create. It follows the role specification
    rules:
      - apiGroups:
          - ''
        resources:
          - services
          - endpoints
          - pods
        verbs:
          - get
          - watch
          - list

# Agent configuration
agent:
  replicaCount: 1
  image:
    repository: jetbrains/teamcity-agent
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 800m
      memory: 968Mi
    requests:
      cpu: 600m
      memory: 968Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  persistentVolume:
    enabled: false

# Server configuration
server:
  replicaCount: 1
  image:
    pullPolicy: IfNotPresent
    repository: jetbrains/teamcity-server
    version: 2022.10.1
  resources:
    limits:
      cpu: 800m
      memory: 2048Mi
    requests:
      cpu: 600m
      memory: 2048Mi
  # Application liveness probe settings
  livenessProbe:
    enabled: true
    path: /js/polyfills.js
    initialDelaySeconds: 180
    failureThreshold: 10
    timeoutSeconds: 10
    periodSeconds: 10
    successThreshold: 1
  # Application readiness probe settings
  readinessProbe:
    enabled: true
    path: /js/polyfills.js
    initialDelaySeconds: 60
    failureThreshold: 10
    timeoutSeconds: 10
    periodSeconds: 10
    successThreshold: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  persistentVolume:
    enabled: true
  teamcityServerOpts: "-Dteamcity.caches.path=/caches"

service:
  name: teamcity
  type: NodePort
  port: 8111
  annotations: {}

ingress:
  enabled: true
  annotations:
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # nginx.ingress.kubernetes.io/proxy-body-size: 2000m
  # nginx.com/health-checks: "true"
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
  path: /
  # Put here any labels you'd like to see in the ingress configuration:
  labels:

## If the volume name is not set and enabled is true, a name is generated using the template
pvc:
  agent:
    enabled: false
    name:
  server:
    enabled: false
    name: s3-dataset
db:
  endpoint: teamcity-db.c59tu0hvtcjh.us-east-2.rds.amazonaws.com:5432
  name: teamcitydb
  username: teamcity
  password: teamcity
  config: |
    # Database: PostgreSQL
    connectionUrl=jdbc:postgresql://{{ .Values.db.endpoint }}/{{ .Values.db.name }}
    connectionProperties.user={{ .Values.db.username }}
    connectionProperties.password={{ .Values.db.password }}
    maxConnections=50
    testOnBorrow=false